.row
  %p
    = @user.to_json
    = 3.times {|n| puts "<BR>"}
    = @friends.to_json
    

  .viz 
  :javascript 
    var width = 960,
    height = 500;
    var color = d3.scale.category20();

    var force = d3.layout.force()
        .charge(-120)
        .linkDistance(30)
        .size([width, height]);

    var svg = d3.select("body").append("svg")
        .attr("width", width)
        .attr("height", height);

    var graph = {
                  "nodes":[
                    {"name":"Myself","group":0},
                    {"name":"My friend 1","group":1},
                    {"name":"My friend 2","group":1},

                  ],
                  "links":[
                    {"source":1,"target":0,"value":1},
                    {"source":2,"target":0,"value":8},
                  ]
                }

      force
          .nodes(graph.nodes)
          .links(graph.links)
          .start();

      var link = svg.selectAll(".link")
          .data(graph.links)
        .enter().append("line")
          .attr("class", "link")
          .style("stroke-width", function(d) { return Math.sqrt(d.value); });

      var node = svg.selectAll(".node")
          .data(graph.nodes)
        .enter().append("circle")
          .attr("class", "node")
          .attr("r", 5)
          .style("fill", function(d) { return color(d.group); })
          .call(force.drag);

      node.append("title")
          .text(function(d) { return d.name; });

      force.on("tick", function() {
        link.attr("x1", function(d) { return d.source.x; })
            .attr("y1", function(d) { return d.source.y; })
            .attr("x2", function(d) { return d.target.x; })
            .attr("y2", function(d) { return d.target.y; });

        node.attr("cx", function(d) { return d.x; })
            .attr("cy", function(d) { return d.y; });
      });
  
.row
  .span6
    %h1
      = @user.name
      %small
        = "@#{@user.screen_name}"
    - unless @user.description.blank?
      %h6
        = @user.description
  .span6
    %table.table
      %thead
        %tr
          %th
            = t('th.tweets')
          %th
            = t('th.following')
          %th
            = t('th.followers')
          %th
            = t('th.favorites')
      %tbody
        %tr
          %td
            = number_with_delimiter @user.statuses_count
          %td
            = number_with_delimiter @user.friends_count
          %td
            = number_with_delimiter @user.followers_count
          %td
            = number_with_delimiter @user.favorites_count
.row
  .span12
    - unless @user.status.blank?
      %blockquote
        %q{cite: 'https://twitter.com/#{@user.screen_name}/status/#{@user.status.id}'}
          %p
            = auto_link(@user.status.text.dup).html_safe
        %small
          = t('time.ago', time: time_ago_in_words(@user.status.created_at).capitalize)
          = t('via.source', source: @user.status.source).html_safe
.row
  .span6
    %dl.dl-horizontal
      %dt
        Access&nbsp;token
      %dd
        = session['access_token']
      %dt
        Access&nbsp;token&nbsp;secret
      %dd
        = session['access_token_secret']
  .span2.offset4
    = form_tag(signout_path, method: 'delete') do
      %fieldset
        %button.btn.btn-danger#sign_out
          = t('button.sign_out')
